
{
    "structure": [
        [0, "Project Name", "folder"],
        [1, "Project Name/src", "folder"],
        [2, "Project Name/src/components", "folder"],
        [2, "Project Name/src/pages", "folder"],
        [2, "Project Name/src/App.tsx", "file"],
        [2, "Project Name/src/main.tsx", "file"],
        [1, "Project Name/public", "folder"],
        [2, "Project Name/public/manifest.json", "file"],
        [1, "Project Name/package.json", "file"],
        [1, "Project Name/tsconfig.json", "file"],
        [1, "Project Name/tailwind.config.ts", "file"],
        [1, "Project Name/postcss.config.ts", "file"],
        [1, "Project Name/vite.config.ts", "file"],
        [1, "Project Name/index.html", "file"]
    ],
    "boilerplate": {
        "Project Name/src/App.tsx": "import { Button } from "@/components/ui/button";

function App() {
    return (
        <div className="flex items-center justify-center h-screen">
            <Button>Click me</Button>
        </div>
    );
}

export default App;",
        
        "Project Name/src/main.tsx": "import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App";
import "./index.css";

ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
    <React.StrictMode>
        <App />
    </React.StrictMode>
);",

        "Project Name/public/manifest.json": "{
    "short_name": "App",
    "name": "Project Name",
    "icons": [],
    "start_url": ".",
    "display": "standalone",
    "theme_color": "#ffffff",
    "background_color": "#ffffff"
}",

        "Project Name/package.json": "{
    "name": "project-name",
    "version": "0.1.0",
    "private": true,
    "dependencies": {
        "react": "^18.0.0",
        "react-dom": "^18.0.0",
        "@shadcn/ui": "latest"
    },
    "devDependencies": {
        "typescript": "^5.0.0",
        "vite": "^4.0.0",
        "tailwindcss": "latest",
        "postcss": "latest",
        "autoprefixer": "latest"
    }
}",

        "Project Name/tsconfig.json": "{
    "compilerOptions": {
        "target": "esnext",
        "module": "esnext",
        "jsx": "react-jsx",
        "strict": true
    }
}",

        "Project Name/tailwind.config.ts": "import type { Config } from 'tailwindcss';

const config: Config = {
    content: ["./index.html", "./src/**/*.tsx"],
    theme: {
        extend: {},
    },
    plugins: [],
};

export default config;",

        "Project Name/postcss.config.ts": "export default {
    plugins: {
        tailwindcss: {},
        autoprefixer: {},
    },
};",

        "Project Name/vite.config.ts": "import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";

export default defineConfig({
    plugins: [react()],
});",

        "Project Name/index.html": "<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="manifest" href="/manifest.json" />
    <title>Project Name</title>
</head>
<body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
</body>
</html>"
    },
    "scripts": [
        "npm install",
        "npm run dev",
        "npm run build",
        "npm run preview"
    ],
    "tags": []
}
